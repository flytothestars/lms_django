# Generated by Django 3.2.16 on 2023-02-27 05:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('directory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TempEnrollee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено ли?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('created_by_id', models.UUIDField(null=True, verbose_name='Создатель')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('updated_by_id', models.UUIDField(null=True, verbose_name='Кто изменил')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на изменение')),
                ('full_name', models.CharField(max_length=500, verbose_name='ФИО участника')),
                ('phone_number', models.CharField(help_text='Номер телефона должен состоять из 10 чисел, без +7, например: 7071231212.', max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Неправильный номер телефона.', 'invalid')], verbose_name='Контактный телефон')),
                ('email', models.CharField(max_length=250, verbose_name='электронный адрес')),
                ('company_name', models.CharField(max_length=250, verbose_name='наименование компании')),
                ('identification_number', models.CharField(default='', max_length=12, validators=[django.core.validators.RegexValidator('^\\d{12}$', 'Неправильный идентификационный номер.', 'invalid')], verbose_name='ИИН/БИН')),
                ('description', models.TextField(verbose_name='описание')),
                ('number_of_completed_years', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='количество полных лет работы бизнеса')),
                ('employee_count', models.PositiveIntegerField(default=0, verbose_name='количество сотрудников')),
                ('is_recording_customers', models.BooleanField(default=False, verbose_name='ведется ли учет клиентов')),
                ('is_recording_average_check', models.BooleanField(default=False, verbose_name='ведется ли учет среднего чека на 1 клиентов')),
                ('is_used_automation', models.BooleanField(default=False, verbose_name='применяется автоматизация деятельности')),
                ('another_automation_system', models.CharField(blank=True, max_length=300, null=True, verbose_name='другая система автоматизации')),
                ('another_problem_or_task', models.CharField(blank=True, max_length=300, null=True, verbose_name='другая проблема или задача')),
                ('lang', models.CharField(choices=[('KK', 'Қазақ тілі'), ('RU', 'Русский язык')], default='RU', max_length=50, verbose_name='язык')),
                ('promo_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='промокод')),
                ('is_complete_course', models.BooleanField(default=False, verbose_name='курс пройден')),
                ('is_emailed', models.BooleanField(default=False, verbose_name='сообщение отправлено')),
                ('email_is_not_valid', models.BooleanField(default=False, verbose_name='Некорректный email')),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_enrollees', related_query_name='temp_enrollee', to='directory.activity', verbose_name='сфера деятельности')),
                ('automation_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_enrollees', related_query_name='temp_enrollee', to='directory.automationsystem', verbose_name='система автоматизации')),
                ('course_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temp_enrollees', related_query_name='temp_enrollees', to='courses.courseschedule', verbose_name='расписание курса')),
                ('participation_purpose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_enrollees', related_query_name='temp_enrollee', to='directory.participationpurpose', verbose_name='цель участия')),
                ('problem_or_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_enrollees', related_query_name='temp_enrollee', to='directory.problemortask', verbose_name='проблемы или задачи')),
            ],
            options={
                'verbose_name': 'Временный абитуриент',
                'verbose_name_plural': 'Временные абитуриенты',
                'db_table': 'enrollees_temp_enrollee',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enrollee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено ли?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('created_by_id', models.UUIDField(null=True, verbose_name='Создатель')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('updated_by_id', models.UUIDField(null=True, verbose_name='Кто изменил')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на изменение')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('course_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollees', related_query_name='enrollee', to='courses.courseschedule', verbose_name='расписание курса')),
            ],
            options={
                'verbose_name': 'Абитуриент',
                'verbose_name_plural': 'Абитуриенты',
                'db_table': 'enrollees_enrollee',
                'ordering': ['-created_at'],
            },
        ),
    ]
